version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: ai-detection-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password
      MONGO_INITDB_DATABASE: ai-detection-agent
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    networks:
      - ai-detection-network

  # Neo4j Graph Database
  neo4j:
    image: neo4j:5.15
    container_name: ai-detection-neo4j
    restart: unless-stopped
    ports:
      - "7474:7474"  # HTTP
      - "7687:7687"  # Bolt
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4J_PLUGINS: '["apoc"]'
      NEO4J_dbms_security_procedures_unrestricted: apoc.*
      NEO4J_dbms_security_procedures_allowlist: apoc.*
    volumes:
      - neo4j_data:/data
      - neo4j_logs:/logs
      - neo4j_import:/var/lib/neo4j/import
      - neo4j_plugins:/plugins
    networks:
      - ai-detection-network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: ai-detection-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - ai-detection-network

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: ai-detection-backend
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      MONGODB_URI: mongodb://admin:password@mongodb:27017/ai-detection-agent?authSource=admin
      REDIS_URL: redis://redis:6379
      NEO4J_URI: bolt://neo4j:7687
      NEO4J_USER: neo4j
      NEO4J_PASSWORD: password
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      EDR_API_KEY: ${EDR_API_KEY}
      SIEM_API_KEY: ${SIEM_API_KEY}
      CLOUD_API_KEY: ${CLOUD_API_KEY}
      FRAUD_API_KEY: ${FRAUD_API_KEY}
      APM_API_KEY: ${APM_API_KEY}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-here}
      CORS_ORIGIN: http://localhost:5173
      WS_CORS_ORIGIN: http://localhost:5173
    depends_on:
      - mongodb
      - neo4j
      - redis
    volumes:
      - ./backend/logs:/app/logs
    networks:
      - ai-detection-network

  # Frontend Application
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ai-detection-frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    environment:
      VITE_API_BASE_URL: http://localhost:3001/api/v1
      VITE_WS_URL: ws://localhost:3001
    depends_on:
      - backend
    networks:
      - ai-detection-network

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: ai-detection-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - ai-detection-network

volumes:
  mongodb_data:
    driver: local
  neo4j_data:
    driver: local
  neo4j_logs:
    driver: local
  neo4j_import:
    driver: local
  neo4j_plugins:
    driver: local
  redis_data:
    driver: local

networks:
  ai-detection-network:
    driver: bridge
